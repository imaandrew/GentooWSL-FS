name: CI

on:
  schedule:
    - cron: '00 00 * * 0'
  push:
    branches: 
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Installed prerequisite packages
      run: |
        sudo apt-get update -q
        sudo apt-get install -y -q curl wget xz-utils sudo pv coreutils
    - name: Setup environment and download files
      run: |
        source ./env.sh
        mkdir rootfs
        wget -q ${GTOO_URL}
        sudo tar -xpf ${TAR} -C rootfs --xattrs-include='*.*' --numeric-owner
        cd rootfs
        sudo cp -f ../wsl.conf ./etc
        sudo cp -f ../make.conf ./etc/portage
        sudo cp -f /etc/resolv.conf ./etc
        sudo cp -f ../cpu.sh ./
    - name: Mount directories and setup chroot
      run: |
        cd rootfs
        sudo mount --types proc /proc ./proc
        sudo mount --rbind /sys ./sys
        sudo mount --make-rslave ./sys
        sudo mount --rbind /dev ./dev
        sudo mount --make-rslave ./dev
        sudo mount --rbind /dev/shm/ ./dev/shm
        sudo chmod 1777 ./dev/shm/
        sudo chroot . sh cpu.sh
        sudo chroot . mkdir --parents ./etc/portage/repos.conf
        sudo chroot . cp ./usr/share/portage/config/repos.conf ./etc/portage/repos.conf/gentoo.conf
        sudo chroot . emerge-webrsync
    - name: GCC
      run: |
        cd rootfs
        sudo chroot . emerge -a n sys-devel/gcc
    - name: More portage stuff
      run: |
        cd rootfs
        sudo chroot . emerge --update --deep --with-bdeps=y --newuse @world
        sudo chroot . emerge -a n app-portage/mirrorselect
        echo 'ACCEPT_LICENSE="-* @FREE linux-fw-redistributable no-source-code"' | sudo tee -a ./etc/portage/make.conf
        sudo chroot . mirrorselect -s3 -b10 -D
    - name: Sudo n stuff
      run: |
        cd rootfs
        sudo chroot . emerge -a n app-admin/sudo app-shells/bash-completion
        sudo sed -i -e 's/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/' ./etc/sudoers
        sudo sed -i -e 's/pam_unix.so try_first_pass use_authtok nullok sha512 shadow/pam_unix.so nullok sha512 shadow/' ./etc/pam.d/system-auth
        sudo sed -ie "s/\(.*passwdqc.*\)/#\1/" ./etc/pam.d/system-auth
    - name: Locale stuff
      run: |
        cd rootfs
        echo 'en_US.UTF-8 UTF-8' | sudo tee -a ./etc/locale.gen
        sudo chroot . locale-gen
        sudo sed -i -e 's/C.UTF8/"en_US.UTF-8"/' ./etc/env.d/02locale
        echo 'LC_COLLATE="C"' | sudo tee -a ./etc/env.d/02locale
    - name: Setup custom gentoo overlay
      run: |
        cd rootfs
        sudo chroot . emerge -a n app-portage/layman
        sudo sed -i '/^#/!s/check_official .*/check_official : No/' ./etc/layman/layman.cfg
        sudo chroot . layman -o https://raw.githubusercontent.com/imaandrew/gentoowsl-overlay/master/repositories.xml -f -a gentoowsl
        sudo chroot . layman-updater -R 
        sudo chroot . emerge -a n sys-apps/wslu sys-process/cronie
        sudo chroot . rc-update add cronie default
    - name: Network things
      run: |
        cd rootfs
        sudo chroot . emerge -a n net-misc/netifrc net-misc/dhcpcd net-misc/iputils
        echo 'config_eth0="dhcp"' | sudo tee -a ./etc/conf.d/net
    - name: Unmount and compress rootfs
      run: |
        cd rootfs
        sudo rm -rf ./var/cache/distfiles/*
        sudo umount -R ./{sys,proc,dev}
        sudo tar -zcpf ../rootfs.tar.gz *
        sudo chown $(id -un) ../rootfs.tar.gz
        mkdir ../out
        mv ../rootfs.tar.gz ../out
    - name: Set variable
      run: echo "version=$(date +%y%m%d)" >> $GITHUB_ENV
      shell: bash
    - name: Publish release
      if: ${{ github.event_name == 'schedule' }}
      uses: ncipollo/release-action@v1
      with:
        artifacts: "out/rootfs.tar.gz"
        tag: "${{env.version}}"
        token: ${{ secrets.TOKEN }}
        commit: master
